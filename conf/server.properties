quota.producer.default = 9223372036854775807
offsets.topic.num.partitions = 50
log.flush.interval.messages = 9223372036854775807
auto.create.topics.enable = true
controller.socket.timeout.ms = 30000
log.flush.interval.ms = 9223372036854775807
replica.socket.receive.buffer.bytes = 65536
min.insync.replicas = 1
replica.fetch.wait.max.ms = 500
num.recovery.threads.per.data.dir = 10
ssl.keystore.type = JKS
super.users = User:kafka
sasl.mechanism.inter.broker.protocol = GSSAPI
default.replication.factor = 2
log.preallocate = false
sasl.kerberos.principal.to.local.rules = DEFAULT
fetch.purgatory.purge.interval.requests = 1000
replica.socket.timeout.ms = 30000
message.max.bytes = 1000012
num.io.threads = 8
offsets.commit.required.acks = -1
log.flush.offset.checkpoint.interval.ms = 60000
quota.window.size.seconds = 1
delete.topic.enable = true
ssl.truststore.type = JKS
offsets.commit.timeout.ms = 5000
quota.window.num = 11
zookeeper.connect = 192.168.160.243:24002,192.168.160.242:24002,192.168.160.241:24002/kafka
user.group.cache.timeout.sec = 300
num.replica.fetchers = 1
log.roll.jitter.hours = 0
tmp.zookeeper.connect = 192.168.160.243:24002,192.168.160.242:24002,192.168.160.241:24002
log.cleaner.enable = false
offsets.load.buffer.size = 5242880
log.cleaner.delete.retention.ms = 86400000
ssl.client.auth = none
controlled.shutdown.max.retries = 3
queued.max.requests = 500
offsets.topic.replication.factor = 3
log.cleaner.threads = 1
sasl.kerberos.ticket.renew.jitter = 0.05
socket.request.max.bytes = 104857600
zookeeper.session.timeout.ms = 40000
log.retention.bytes = -1
log.message.timestamp.type = CreateTime
sasl.kerberos.min.time.before.relogin = 60000
zookeeper.set.acl = false
connections.max.idle.ms = 600000
offsets.retention.minutes = 1440
is.security.mode = no
replica.fetch.backoff.ms = 1000
log.retention.hours = 168
num.partitions = 2
listeners = PLAINTEXT://192.168.160.244:21005,SSL://192.168.160.244:21008
ssl.enabled.protocols = TLSv1.2,TLSv1.1
log.flush.scheduler.interval.ms = 9223372036854775807
ssl.cipher.suites = TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
ssl.mode.enable = false
log.index.size.max.bytes = 10485760
security.inter.broker.protocol = PLAINTEXT
replica.fetch.max.bytes = 1048576
log.cleaner.dedupe.buffer.size = 524288000
replica.high.watermark.checkpoint.interval.ms = 5000
log.cleaner.io.buffer.size = 524288
sasl.kerberos.ticket.renew.window.factor = 0.8
zookeeper.connection.timeout.ms = 30000
controlled.shutdown.retry.backoff.ms = 5000
log.roll.hours = 168
log.cleanup.policy = delete
host.name = 192.168.160.244
max.connections.per.ip = 2147483647
offsets.topic.segment.bytes = 104857600
background.threads = 10
quota.consumer.default = 9223372036854775807
replica.lag.max.messages = 4000
request.timeout.ms = 30000
log.message.format.version = 0.10.0-IV1
log.index.interval.bytes = 4096
log.segment.bytes = 1073741824
log.cleaner.backoff.ms = 15000
offset.metadata.max.bytes = 4096
ssl.truststore.location = #{conf_dir}/truststore.jks
group.max.session.timeout.ms = 300000
zookeeper.sync.time.ms = 2000
port = 21005
log.segment.delete.delay.ms = 60000
ssl.port = 21008
log.dirs = /srv/BigData/kafka/data1/kafka-logs
controlled.shutdown.enable = true
compression.type = producer
max.connections.per.ip.overrides = 
log.message.timestamp.difference.max.ms = 9223372036854775807
sasl.kerberos.kinit.cmd = /bin/kinit
log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
auto.leader.rebalance.enable = true
leader.imbalance.check.interval.seconds = 300
log.cleaner.min.cleanable.ratio = 0.5
replica.lag.time.max.ms = 10000
num.network.threads = 3
reserved.broker.max.id = 65535
socket.send.buffer.bytes = 102400
socket.receive.buffer.bytes = 102400
ssl.keystore.location = #{conf_dir}/keystore.jks
replica.fetch.min.bytes = 1
broker.rack = /default/rack0
unclean.leader.election.enable = true
sasl.enabled.mechanisms = GSSAPI
group.min.session.timeout.ms = 6000
log.cleaner.io.buffer.load.factor = 0.9
offsets.retention.check.interval.ms = 600000
kerberos.domain.name = hadoop.hadoop.com
producer.purgatory.purge.interval.requests = 1000
broker.id = 1
offsets.topic.compression.codec = 0
log.retention.check.interval.ms = 300000
leader.imbalance.per.broker.percentage = 10
